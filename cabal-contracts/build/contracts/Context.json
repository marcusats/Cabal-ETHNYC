{
  "contractName": "Context",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n",
  "sourcePath": "@openzeppelin/contracts/utils/Context.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
    "exportedSymbols": {
      "Context": [
<<<<<<< HEAD
        710
      ]
    },
    "id": 711,
=======
        670
      ]
    },
    "id": 671,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
<<<<<<< HEAD
        "id": 690,
=======
        "id": 650,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "86:23:3"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "Context",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
<<<<<<< HEAD
          "id": 691,
=======
          "id": 651,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
          "nodeType": "StructuredDocumentation",
          "src": "111:496:3",
          "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
        },
        "fullyImplemented": true,
<<<<<<< HEAD
        "id": 710,
        "linearizedBaseContracts": [
          710
=======
        "id": 670,
        "linearizedBaseContracts": [
          670
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
        ],
        "name": "Context",
        "nameLocation": "626:7:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
<<<<<<< HEAD
              "id": 699,
=======
              "id": 659,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
              "nodeType": "Block",
              "src": "702:34:3",
              "statements": [
                {
                  "expression": {
                    "expression": {
<<<<<<< HEAD
                      "id": 696,
=======
                      "id": 656,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "719:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
<<<<<<< HEAD
                    "id": 697,
=======
                    "id": 657,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "719:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 695,
                  "id": 698,
=======
                  "functionReturnParameters": 655,
                  "id": 658,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
                  "nodeType": "Return",
                  "src": "712:17:3"
                }
              ]
            },
<<<<<<< HEAD
            "id": 700,
=======
            "id": 660,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "649:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 692,
=======
              "id": 652,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "659:2:3"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 695,
=======
              "id": 655,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 694,
=======
                  "id": 654,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 700,
=======
                  "scope": 660,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
                  "src": "693:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 693,
=======
                    "id": 653,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "693:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "692:9:3"
            },
<<<<<<< HEAD
            "scope": 710,
=======
            "scope": 670,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
            "src": "640:96:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 708,
=======
              "id": 668,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
              "nodeType": "Block",
              "src": "809:32:3",
              "statements": [
                {
                  "expression": {
                    "expression": {
<<<<<<< HEAD
                      "id": 705,
=======
                      "id": 665,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "826:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
<<<<<<< HEAD
                    "id": 706,
=======
                    "id": 666,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "src": "826:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 704,
                  "id": 707,
=======
                  "functionReturnParameters": 664,
                  "id": 667,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
                  "nodeType": "Return",
                  "src": "819:15:3"
                }
              ]
            },
<<<<<<< HEAD
            "id": 709,
=======
            "id": 669,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "751:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 701,
=======
              "id": 661,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "759:2:3"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 704,
=======
              "id": 664,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 703,
=======
                  "id": 663,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 709,
=======
                  "scope": 669,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
                  "src": "793:14:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 702,
=======
                    "id": 662,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "793:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "792:16:3"
            },
<<<<<<< HEAD
            "scope": 710,
=======
            "scope": 670,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
            "src": "742:99:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 711,
=======
        "scope": 671,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
        "src": "608:235:3",
        "usedErrors": []
      }
    ],
    "src": "86:758:3"
  },
  "legacyAST": {
    "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
    "exportedSymbols": {
      "Context": [
<<<<<<< HEAD
        710
      ]
    },
    "id": 711,
=======
        670
      ]
    },
    "id": 671,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
<<<<<<< HEAD
        "id": 690,
=======
        "id": 650,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "86:23:3"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "Context",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
<<<<<<< HEAD
          "id": 691,
=======
          "id": 651,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
          "nodeType": "StructuredDocumentation",
          "src": "111:496:3",
          "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
        },
        "fullyImplemented": true,
<<<<<<< HEAD
        "id": 710,
        "linearizedBaseContracts": [
          710
=======
        "id": 670,
        "linearizedBaseContracts": [
          670
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
        ],
        "name": "Context",
        "nameLocation": "626:7:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
<<<<<<< HEAD
              "id": 699,
=======
              "id": 659,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
              "nodeType": "Block",
              "src": "702:34:3",
              "statements": [
                {
                  "expression": {
                    "expression": {
<<<<<<< HEAD
                      "id": 696,
=======
                      "id": 656,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "719:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
<<<<<<< HEAD
                    "id": 697,
=======
                    "id": 657,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "719:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 695,
                  "id": 698,
=======
                  "functionReturnParameters": 655,
                  "id": 658,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
                  "nodeType": "Return",
                  "src": "712:17:3"
                }
              ]
            },
<<<<<<< HEAD
            "id": 700,
=======
            "id": 660,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "649:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 692,
=======
              "id": 652,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "659:2:3"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 695,
=======
              "id": 655,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 694,
=======
                  "id": 654,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 700,
=======
                  "scope": 660,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
                  "src": "693:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 693,
=======
                    "id": 653,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "693:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "692:9:3"
            },
<<<<<<< HEAD
            "scope": 710,
=======
            "scope": 670,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
            "src": "640:96:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 708,
=======
              "id": 668,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
              "nodeType": "Block",
              "src": "809:32:3",
              "statements": [
                {
                  "expression": {
                    "expression": {
<<<<<<< HEAD
                      "id": 705,
=======
                      "id": 665,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "826:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
<<<<<<< HEAD
                    "id": 706,
=======
                    "id": 666,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "src": "826:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 704,
                  "id": 707,
=======
                  "functionReturnParameters": 664,
                  "id": 667,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
                  "nodeType": "Return",
                  "src": "819:15:3"
                }
              ]
            },
<<<<<<< HEAD
            "id": 709,
=======
            "id": 669,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "751:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 701,
=======
              "id": 661,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "759:2:3"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 704,
=======
              "id": 664,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 703,
=======
                  "id": 663,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 709,
=======
                  "scope": 669,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
                  "src": "793:14:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 702,
=======
                    "id": 662,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "793:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "792:16:3"
            },
<<<<<<< HEAD
            "scope": 710,
=======
            "scope": 670,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
            "src": "742:99:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 711,
=======
        "scope": 671,
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
        "src": "608:235:3",
        "usedErrors": []
      }
    ],
    "src": "86:758:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
<<<<<<< HEAD
  "schemaVersion": "3.4.5",
  "updatedAt": "2022-06-26T06:24:37.012Z",
=======
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-06-26T06:33:20.734Z",
>>>>>>> 5f46ef5acc170675de508c3b524c7995930a3ebd
  "devdoc": {
    "details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}